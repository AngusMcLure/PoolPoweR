% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fisher_information.R
\name{fi_pool}
\alias{fi_pool}
\alias{fi_pool_cluster}
\alias{fi_pool_random}
\alias{fi_pool_cluster_random}
\title{Fisher information for population prevalence (and intra-cluster correlation)}
\usage{
fi_pool(pool_size, prevalence, sensitivity, specificity)

fi_pool_cluster(
  pool_size,
  pool_number,
  prevalence,
  correlation,
  sensitivity,
  specificity,
  form = "logitnorm",
  real_scale = FALSE
)

fi_pool_random(
  catch_dist,
  pool_strat,
  prevalence,
  sensitivity,
  specificity,
  max_iter = 10000,
  rel_tol = 1e-06
)

fi_pool_cluster_random(
  catch_dist,
  pool_strat,
  prevalence,
  correlation,
  sensitivity,
  specificity,
  form = "logitnorm",
  real_scale = FALSE,
  max_iter = 1000,
  rel_tol = 1e-06
)
}
\arguments{
\item{pool_size}{numeric The number of units per pool. Must be a numeric
value or vector of values greater than 0.}

\item{prevalence}{numeric The proportion of units that carry the marker of
interest (i.e. true positive). Must be be a numeric value between 0 and 1,
inclusive of both.}

\item{sensitivity}{numeric The probability that the test correctly identifies
a true positive. Must be a numeric value between 0 and 1, inclusive of
both. A value of 1 indicates that the test can perfectly identify all true
positives.}

\item{specificity}{numeric The probability that the test correctly identifies
a true negative. Must be a numeric value between 0 and 1, inclusive of
both. A value of 1 indicates that the test can perfectly identify all true
negatives.}

\item{pool_number}{numeric The number of pools per cluster. Must be a integer
value or a vector of integer values greater than or equal to 1.}

\item{correlation}{numeric The correlation between test results within a
single cluster (units in different clusters are assumed to be
uncorrelated). Must be a numeric value between 0 and 1, inclusive of both.
A value of 1 indicates that units within clusters are perfectly correlated
(there are no differences units within a single cluster). A value of 0
indicates that units within clusters are no more correlated than units in
different clusters.}

\item{form}{string The distribution used to model the cluster-level
prevalence and correlation of units within cluster. Select one of "beta",
"logitnorm" or "cloglognorm". See details.}

\item{real_scale}{boolean Applies only when `form = "logitnorm"` or `form =
"cloglognorm"`. Determines whether Fisher information should be returned
for the parameters of the logitnorm/cloglognorm distributions on the real
scale (i.e. mu and sigma). If FALSE (the default) Fisher information is
returned for prevalence (theta) and correlation (rho) instead.}

\item{catch_dist}{An object of class `distribution` (e.g. produced by
`nb_catch()`) defining the distribution of the possible catch. For
`fi_pool_random` catch is for the whole survey. For
`fi_pool_cluster_random` catch is per cluster (i.e. cluster size) sizes}

\item{pool_strat}{function Defines a rule for how a number of units will be
divided into pools. Must take a single numeric argument and return a named
list of pool sizes and pool numbers. `pool_max_size()` and
`pool_target_number()` provide convenience functions for defining common
pooling strategies.}

\item{max_iter}{numeric Maximum number of iterations (possible catch sizes)
to consider when calculating expected FI over random catch sizes. Generally
needs to be large enough so that the nearly all catch sizes will be less
than `max_iter` otherwise algorithm will terminate early (with a warning)}

\item{rel_tol}{numeric Relative tolerance for determining convergence when
calculating expected FI over random catch sizes. Must be positive and
should be much smaller than 1.}
}
\value{
The Fisher information for prevalence (`fi_pool()` and
  `fi_pool_random()`) or the Fisher information matrix for prevalence and
  intra-cluster correlation (`fi_pool_cluster()` and
  `fi_pool_cluster_random()`)
}
\description{
`fi_pool()` and `fi_pool_cluster()` calculate Fisher information (FI) for
pool-tested surveys with a known number and size of pools. `fi_pool_random()`
and `fi_pool_cluster_random()` calculate FI for surveys where the number of
units is random. `fi_pool()` and `fi_pool_random` calculates the Fisher
information for the prevalence for simple random surveys. `fi_pool_cluster()`
and `fi_pool_cluster_random()` calculate the two-by-two Fisher information
matrix for prevalence and within-cluster correlation for cluster survey
designs.
}
\examples{
fi_pool(
  pool_size = 10, prevalence = 0.01, sensitivity = 0.95, specificity = 0.99
  )

fi_pool_cluster(
  pool_size = 10, pool_number = 5, prevalence = 0.01,
  correlation = 0.05, sensitivity = 0.95, specificity = 0.99
  )

fi_pool_random(
  catch_dist = nb_catch(mean = 10, variance = 50),
  pool_strat = pool_target_number(target_number = 2),
  prevalence = 0.01,
  sensitivity = 0.95, specificity = 0.99)

fi_pool_cluster_random(
  catch_dist = nb_catch(mean = 10, variance = 50),
  pool_strat = pool_target_number(target_number = 2),
  prevalence = 0.01, correlation = 0.05,
  sensitivity = 0.95, specificity = 0.99,
  form = 'logitnorm')

}

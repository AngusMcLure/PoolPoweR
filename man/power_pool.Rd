% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power.R
\name{power_pool}
\alias{power_pool}
\alias{sample_size_pool}
\title{Power and sample size calculations for estimating population prevalence from
pooled samples}
\usage{
power_pool(
  sample_size,
  pool_size,
  pool_number,
  prevalence_null,
  prevalence_alt,
  correlation = 0,
  sensitivity = 1,
  specificity = 1,
  sig_level = 0.05,
  alternative = "greater",
  form = "beta",
  link = "logit"
)

sample_size_pool(
  pool_size,
  pool_number,
  prevalence_null,
  prevalence_alt,
  correlation = 0,
  sensitivity = 1,
  specificity = 1,
  power = 0.8,
  sig_level = 0.05,
  alternative = "greater",
  form = "beta",
  link = "logit"
)
}
\arguments{
\item{sample_size}{numeric The total number of units across the whole sample.
Should be greater than `pool_size * pool_number`}

\item{pool_size}{numeric The number of units per pool. Must be a numeric
value or vector of values greater than 0.}

\item{pool_number}{numeric The number of pools per cluster. Must be a integer
value or a vector of integer values greater than or equal to 1.}

\item{prevalence_null, prevalence_alt}{numeric The proportion of units that
carry the marker of interest (i.e. true positive). `prevalence_null` is the
threshold to compare to and `prevalence_alt` is the design prevalence. Must
be be a numeric value between 0 and 1, inclusive of both.}

\item{correlation}{numeric The correlation between test results within a
single cluster (units in different clusters are assumed to be
uncorrelated). Must be a numeric value between 0 and 1, inclusive of both.
A value of 1 indicates that units within clusters are perfectly correlated
(there are no differences units within a single cluster). A value of 0
indicates that units within clusters are no more correlated than units in
different clusters.}

\item{sensitivity}{numeric The probability that the test correctly identifies
a true positive. Must be a numeric value between 0 and 1, inclusive of
both. A value of 1 indicates that the test can perfectly identify all true
positives.}

\item{specificity}{numeric The probability that the test correctly identifies
a true negative. Must be a numeric value between 0 and 1, inclusive of
both. A value of 1 indicates that the test can perfectly identify all true
negatives.}

\item{sig_level}{numeric Significance level for statistical test. Defaults to
0.05. Must be strictly between 0 and 1.}

\item{alternative}{string The kind of comparison to make. If "greater"
(default) or "less" computes power of tests for one-sided comparisons that
population prevalence (`prevalence_alt`) is greater than or less than the
reference on threshold prevalence (`prevalence_null`) respectively. If
"two.sided" computes power for a two-sided comparison (`power_pool()`
only).}

\item{form}{string The distribution used to model the cluster-level
prevalence and correlation of units within cluster. Select one of "beta",
"logitnorm" or "cloglognorm". See details.}

\item{link}{string Transformation to be applied to prevalence estimates for
the purposes of calculating confidence intervals. Options are 'identity'
(i.e. no transformation), 'logit' (default), 'cloglog' and 'log'.}

\item{power}{numeric The desired statistical power of the survey.}
}
\value{
The statistical power of the proposed design with regards to
  comparing prevalence to a threshold (`power_pool()`)
}
\description{
`power_pool()` calculates the statistical power of a pooled survey design to
determine whether population prevalence is different from a threshold.
`sample_size_pool()` calculate the sample size required for a pooled survey
to achieve a specified power.
}
\examples{
power_pool(sample_size = 1000, pool_size = 10, pool_number = 2,
           prevalence_null = 0.01, prevalence_alt = 0.02)

sample_size_pool(pool_size = 10, pool_number = 2,
                 prevalence_null = 0.01, prevalence_alt = 0.02)

power_pool(sample_size = 1000, pool_size = 10, pool_number = 2,
           prevalence_null = 0.01, prevalence_alt = 0.02,
           correlation = 0.01)

sample_size_pool(pool_size = 10, pool_number = 2,
                 prevalence_null = 0.01, prevalence_alt = 0.02,
                 correlation = 0.01)
}

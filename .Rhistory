correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))) %>%
subset(form == 'beta') %>%
pivot_longer(cols = starts_with('ss'), names_to = 'method',values_to = "n") %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
sample.size.data <- de.data.corr %>%
mutate(theta.null = 0.01, power = 0.8, sig.level = 0.05) %>%
rowwise() %>%
mutate(arcsine = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, pwr::pwr.p.test(h = pwr::ES.h(theta,theta.null),
power = power, sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'))$n),
`Fisher matrix` = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, sample_size_prevalence(s,N,theta.null,theta,
power,sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'),
correlation = correlation, form = form)),
`Design effect` = arcsine * de)
sample.size.data %>%
mutate(s =  as.factor(s),
correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))) %>%
subset(form == 'beta') %>%
pivot_longer(cols = c(arcsine,`Fisher Matrix`,`Design effect`), names_to = 'method',values_to = "n") %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
sample.size.data <- de.data.corr %>%
mutate(theta.null = 0.01, power = 0.8, sig.level = 0.05) %>%
rowwise() %>%
mutate(arcsine = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, pwr::pwr.p.test(h = pwr::ES.h(theta,theta.null),
power = power, sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'))$n),
`Fisher matrix` = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, sample_size_prevalence(s,N,theta.null,theta,
power,sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'),
correlation = correlation, form = form)),
`Design effect` = arcsine * de)
sample.size.data %>%
mutate(s =  as.factor(s),
correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))) %>%
subset(form == 'beta') %>%
pivot_longer(cols = c(arcsine,`Fisher matrix`,`Design effect`), names_to = 'method',values_to = "n") %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
sample.size.data <- de.data.corr %>%
mutate(theta.null = 0.01, power = 0.8, sig.level = 0.05) %>%
rowwise() %>%
mutate(Arcsine = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, pwr::pwr.p.test(h = pwr::ES.h(theta,theta.null),
power = power, sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'))$n),
`Fisher matrix` = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, sample_size_prevalence(s,N,theta.null,theta,
power,sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'),
correlation = correlation, form = form)),
`Design effect` = arcsine * de)
sample.size.data %>%
mutate(s =  as.factor(s),
correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))) %>%
subset(form == 'beta') %>%
pivot_longer(cols = c(arcsine,`Fisher matrix`,`Design effect`), names_to = 'method',values_to = "n") %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
sample.size.data <- de.data.corr %>%
mutate(theta.null = 0.01, power = 0.8, sig.level = 0.05) %>%
rowwise() %>%
mutate(Arcsine = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, pwr::pwr.p.test(h = pwr::ES.h(theta,theta.null),
power = power, sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'))$n),
`Fisher matrix` = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, sample_size_prevalence(s,N,theta.null,theta,
power,sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'),
correlation = correlation, form = form)),
`Design effect` = arcsine * de)
sample.size.data %>%
mutate(s =  as.factor(s),
correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))) %>%
subset(form == 'beta') %>%
pivot_longer(cols = c(Arcsine,`Fisher matrix`,`Design effect`), names_to = 'method',values_to = "n") %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
sample.size.data <- de.data.corr %>%
mutate(theta.null = 0.01, power = 0.8, sig.level = 0.05) %>%
rowwise() %>%
mutate(Arcsine = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, pwr::pwr.p.test(h = pwr::ES.h(theta,theta.null),
power = power, sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'))$n),
`Fisher matrix` = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, sample_size_prevalence(s,N,theta.null,theta,
power,sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'),
correlation = correlation, form = form)),
`Design effect` = arcsine * de)
sample.size.data <- de.data.corr %>%
mutate(theta.null = 0.01, power = 0.8, sig.level = 0.05) %>%
rowwise() %>%
mutate(Arcsine = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, pwr::pwr.p.test(h = pwr::ES.h(theta,theta.null),
power = power, sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'))$n),
`Fisher matrix` = ifelse(abs(theta - theta.null) < .Machine$double.eps,
NA, sample_size_prevalence(s,N,theta.null,theta,
power,sig.level = sig.level,
alternative = ifelse(theta < theta.null, 'less', 'greater'),
correlation = correlation, form = form)),
`Design effect` = Arcsine * de)
sample.size.data %>%
mutate(s =  as.factor(s),
correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))) %>%
subset(form == 'beta') %>%
pivot_longer(cols = c(Arcsine,`Fisher matrix`,`Design effect`), names_to = 'method',values_to = "n") %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
sample.size.data %>%
mutate(s =  as.factor(s),
correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))) %>%
subset(form == 'discrete') %>%
pivot_longer(cols = c(Arcsine,`Fisher matrix`,`Design effect`), names_to = 'method',values_to = "n") %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
mean(c(1,1,1,NA))
mean(c(1,1,1,NA),na.rm = T)
mean(c(1,2,3,NA),na.rm = T)
sample.size.data %>%
mutate(s =  as.factor(s),
correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))) %>%
group_by(form) %>%
group_map(~{
plot <- .x %>%
pivot_longer(cols = c(Arcsine,`Fisher matrix`,`Design effect`), names_to = 'method',values_to = "n") %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
plot %>%
ggsave(paste0('./Figures/SampleSize',.y,'.png'),.,
width = 6.5, height = 5, unit = 'in',dpi = 'retina')
})
sample.size.data %>%
mutate(s =  as.factor(s),
correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation)),
method = factor(method, levels=c('Design effect','Fisher matrix','Arcsine'))) %>%
group_by(form) %>%
group_map(~{
plot <- .x %>%
pivot_longer(cols = c(Arcsine,`Fisher matrix`,`Design effect`), names_to = 'method',values_to = "n") %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
plot %>%
ggsave(paste0('./Figures/SampleSize',.y,'.png'),.,
width = 6.5, height = 5, unit = 'in',dpi = 'retina')
})
sample.size.data %>%
pivot_longer(cols = c(Arcsine,`Fisher matrix`,`Design effect`), names_to = 'method',values_to = "n") %>%
mutate(s =  as.factor(s),
correlation = ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation)),
method = factor(method, levels=c('Design effect','Fisher matrix','Arcsine'))) %>%
group_by(form) %>%
group_map(~{
plot <- .x %>%
ggplot(aes(x = theta, y = n, color = method, linetype = s)) +
geom_line() +
facet_grid(vars(correlation),vars(catch), labeller = label_bquote(rho == .(correlation),N %*% s == .(catch))) +
scale_y_log10() +
coord_cartesian(xlim = c(0,NA)) +
scale_x_continuous(labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = bquote("minimum sample size " * (n == J%*%N%*%s)))
plot %>%
ggsave(paste0('./Figures/SampleSize',.y,'.png'),.,
width = 6.5, height = 5, unit = 'in',dpi = 'retina')
})
plot_data_clustered_alt %>%
ungroup %>% group_by(form) %>%
group_map(~{
.x <- .x %>%
mutate(correlation = ifelse(is.na(correlation),
'NA (simple random survey)',
ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))))
unit_info_cluster <- .x %>%
ggplot(aes(x = s, y = unitcost, color = N)) +
geom_line() +
facet_grid(prevalence~correlation,
labeller = label_bquote(theta == .(prevalence), rho == .(correlation)),
scales = 'free') +
scale_y_log10() +
xlab('s') + ylab('unit cost of information') +
theme(text = element_text(size = 12))
unit_info_cluster %>%
ggsave(paste('./Figures/unit info cluster',.y,'.png')
,., width = 6.5, height = 6.5, unit = 'in')
unit_info_cluster_alt <- .x %>%
mutate(correlation = factor(correlation,
levels = c('0.1','0.01',"0 (known)",
'NA (simple random survey)'))) %>%
ggplot(aes(x = s, y = unitcost, color = correlation)) +
geom_line() +
facet_grid(prevalence~N,
labeller = label_bquote(theta == .(prevalence * 100) * '%', N == .(N)),
scales = 'free') +
scale_y_log10() +
labs(x = 's', y = 'Unit cost of information',
color = latex2exp::TeX(r"($\rho$)")) +
theme(text = element_text(size = 12),
legend.position = 'bottom')
unit_info_cluster_alt %>%
ggsave(paste0('./Figures/unit info cluster alt ',.y,'.png')
,., width = 6.5, height = 6.5, unit = 'in')
})
plot_data_clustered_alt %>%
ungroup %>% group_by(form) %>%
group_map(~{
.x <- .x %>%
mutate(correlation = ifelse(is.na(correlation),
'NA (simple random survey)',
ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation))))
unit_info_cluster <- .x %>%
mutate(N = as.factor(N)) %>%
ggplot(aes(x = s, y = unitcost, color = N)) +
geom_line() +
facet_grid(prevalence~correlation,
labeller = label_bquote(theta == .(prevalence), rho == .(correlation)),
scales = 'free') +
scale_y_log10() +
xlab('s') + ylab('unit cost of information') +
theme(text = element_text(size = 12))
unit_info_cluster %>%
ggsave(paste('./Figures/unit info cluster',.y,'.png')
,., width = 6.5, height = 6.5, unit = 'in')
unit_info_cluster_alt <- .x %>%
mutate(correlation = factor(correlation,
levels = c('0.1','0.01',"0 (known)",
'NA (simple random survey)'))) %>%
ggplot(aes(x = s, y = unitcost, color = correlation)) +
geom_line() +
facet_grid(prevalence~N,
labeller = label_bquote(theta == .(prevalence * 100) * '%', N == .(N)),
scales = 'free') +
scale_y_log10() +
labs(x = 's', y = 'Unit cost of information',
color = latex2exp::TeX(r"($\rho$)")) +
theme(text = element_text(size = 12),
legend.position = 'bottom')
unit_info_cluster_alt %>%
ggsave(paste0('./Figures/unit info cluster alt ',.y,'.png')
,., width = 6.5, height = 6.5, unit = 'in')
})
data_rho_limit_alt <- expand.grid(rho = c(-1,10^(seq(-0.01,-2.2,-0.01))),
theta = c(0.01,0.02,0.05,0.1),
#theta = seq(0.01,0.5,0.01),
s = c(50,100,200,400,1000,2000),
N = 2,
form = c('beta','discrete'),
stringsAsFactors = FALSE) %>%
subset(!(theta > 0.01 & s >= 1000)) %>%
rowwise() %>%
mutate(fi = ifelse(rho == -1,
list(N * fi_pool_imperfect(s,theta,1,1)),
tryCatch(list(fi_pool_imperfect_cluster(s,N,theta,1,1,rho,form = form)), error = function(e){NA})),
var = tryCatch(solve(fi)[1,1], error = function(e){NA})) %>%
ungroup
data_rho_limit_alt %>%
group_by(form) %>%
group_map(~{
varplot <- .x %>%
mutate(s = fct_rev(factor(s)),
theta = paste(as.character(latex2exp::TeX(r"($\theta=$)")),theta, sep = ' * ')) %>%
ggplot(aes(x = rho)) +
geom_line(aes(y = var, color = s),data = ~subset(.x,rho!=-1)) +
geom_hline(aes(yintercept = var,
color = s),
data = ~subset(.x, rho ==-1),
linetype = 2) +
facet_wrap(facets = vars(theta),labeller = label_parsed, scales = 'free_y') +
scale_y_log10() +
xlab(latex2exp::TeX(r"($\rho$)")) +
guides(color = guide_legend(title = latex2exp::TeX(r"($s$)"))) +
theme(strip.placement = "outside",
strip.background = element_rect(fill='white'),
text = element_text(size = 12)) +
ylab(latex2exp::TeX(r"($\Sigma_{1,1} \equiv I(\theta,\rho)^{-1}_{1,1}$)"))
ggsave(paste0('./Figures/Variance',.y,'.png'),varplot,width = 6, height = 5)
})
data_rho_limit %>%
group_by(form) %>%
group_map(~{
fisherplot <- .x %>%
mutate(measure = factor(measure, levels = c('fi_theta','var','fi_cross','fi_rho')),
measure = recode(measure,
fi_theta = paste0(as.character(latex2exp::TeX(r"($I(\theta,rho)_{1,1}$)"))),
var = as.character(latex2exp::TeX(r"($\Sigma_{1,1} \equiv I(\theta,\rho)^{-1}_{1,1}$)")),
fi_cross = as.character(latex2exp::TeX(r"($-I(\theta,rho)_{2,1} = -I(\theta,rho)_{1,2}$)")),
fi_rho = as.character(latex2exp::TeX(r"($I(\theta,rho)_{2,2}$)")))) %>%
ggplot(aes(x = rho)) +
geom_line(aes(y = value, color = factor(theta)),data = ~subset(.x,rho!=-1)) +
geom_hline(aes(yintercept = value,
color = factor(theta)),
data = ~subset(.x, rho ==-1),
linetype = 2) +
facet_wrap(facets = vars(measure),scale = 'free_y',labeller = label_parsed,strip.position = 'left') +
#scale_y_log10() +
ylab('') +
xlab(latex2exp::TeX(r"($\rho$)")) +
guides(color = guide_legend(title = latex2exp::TeX(r"($\theta$)"))) +
theme(strip.placement = "outside",
strip.background = element_rect(fill='white'),
text = element_text(size = 12))
ggsave(paste0('./Figures/FisherMatrix',.y,'.png'),fisherplot,
width = 6, height = 5)
})
dbeta_mix <- function(x,theta, rho, k1, k2 = 1){
alpha0 <- k2 * theta
beta0 <- k2  - alpha0
w1 <- (rho * (k1 + k2) * (k1*k2 +1) + k1 + k2)/(2 * k1 + k2 + k1*k2)
w1 * dbeta(x,alpha0/k1, beta0/k1) + (1-w1) * dbeta(x,alpha0*k1, beta0*k1)
}
plot(function(x){dbeta_mix(x,0.2,0.1,10)})
plot(function(x){dbeta_mix(x,0.2,0.01,10)})
plot(function(x){dbeta_mix(x,0.2,0.001,10)})
plot(function(x){dbeta_mix(x,0.2,0.0001,10)})
plot(function(x){dbeta_mix(x,0.2,1,10)})
dbeta_mix <- function(x,theta, rho, k1, k2 = 1){
alpha0 <- k2 * theta
beta0 <- k2  - alpha0
w1 <- (rho * (k1 + k2) * (k1*k2 +1) + k1 + k2)/(2 * k1 + k2 + k1*k2)
print(w1)
w1 * dbeta(x,alpha0/k1, beta0/k1) + (1-w1) * dbeta(x,alpha0*k1, beta0*k1)
}
plot(function(x){dbeta_mix(x,0.2,1,10)})
plot(function(x){dbeta_mix(x,0.2,1,10)})
plot(function(x){dbeta_mix(x,0.2,1,10)})
plot(function(x){dbeta_mix(x,0.2,10,10)})
plot(function(x){dbeta_mix(x,0.2,0.1,10)})
plot(function(x){dbeta_mix(x,0.2,0.1,100)})
plot(function(x){dbeta_mix(x,0.2,0.1,1)})
plot(function(x){dbeta_mix(x,0.2,0.1,2)})
plot(function(x){dbeta_mix(x,0.2,0.1,3)})
plot(function(x){dbeta_mix(x,0.2,0.1,5)})
plot(function(x){dbeta_mix(x,0.2,0.1,10)})
plot(function(x){dbeta_mix(x,0.2,0.1,15)})
plot(function(x){dbeta_mix(x,0.2,0.1,20)})
plot(function(x){dbeta_mix(x,0.2,0.1,20)})
plot(function(x){dbeta_mix(x,0.2,0.1,18)})
plot(function(x){dbeta_mix(x,0.2,0.1,17)})
plot(function(x){dbeta_mix(x,0.2,0.1,10)})
plot(function(x){dbeta_mix(x,0.2,0.1,10,10)})
plot(function(x){dbeta_mix(x,0.2,0.1,10,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,100,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,90,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,91,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,96,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,97,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,1,0.1)})
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1) * x},0,1)
dbeta_mix <- function(x,theta, rho, k1, k2 = 1){
alpha0 <- k2 * theta
beta0 <- k2  - alpha0
w1 <- (rho * (k1 + k2) * (k1*k2 +1) + k1 + k2)/(2 * k1 + k2 + k1*k2)
#print(w1)
w1 * dbeta(x,alpha0/k1, beta0/k1) + (1-w1) * dbeta(x,alpha0*k1, beta0*k1)
}
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1) * x},0,1)
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1)},0,1)
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1) * x},0,1)
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1) * x^2},0,1)
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1) * x^2},0,1) * 0.2 * 0.8
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1) * x^2},0,1)$value * 0.2 * 0.8
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1) * (x-0.2)^2},0,1)$value * 0.2 * 0.8
dbeta_mix <- function(x,theta, rho, k1, k2 = 1){
alpha0 <- k2 * theta
beta0 <- k2  - alpha0
w1 <- (k1 + k2) * (k1^2 - (k1 * k2 + 1) * rho)/(k1 * (k1^2 -1))
w1 * dbeta(x,alpha0/k1, beta0/k1) + (1-w1) * dbeta(x,alpha0*k1, beta0*k1)
}
plot(function(x){dbeta_mix(x,0.2,0.1,1,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,1.1,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,10,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,100,0.1)})
dbeta_mix <- function(x,theta, rho, k1, k2 = 1){
alpha0 <- k2 * theta
beta0 <- k2  - alpha0
w1 <- (k1 + k2) * (k1^2 - (k1 * k2 + 1) * rho)/(k1 * (k1^2 -1))
print(w1)
w1 * dbeta(x,alpha0/k1, beta0/k1) + (1-w1) * dbeta(x,alpha0*k1, beta0*k1)
}
plot(function(x){dbeta_mix(x,0.2,0.1,100,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,99,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,90,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,70,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,40,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,20,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,10,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,5,0.1)})
dbeta_mix <- function(x,theta, rho, k1, k2 = 1){
alpha0 <- k2 * theta
beta0 <- k2  - alpha0
w1 <- (k1 + k2) * ((k1 * k2 + 1) * rho - 1)/((k1^2 - 1) * k2)
print(w1)
w1 * dbeta(x,alpha0/k1, beta0/k1) + (1-w1) * dbeta(x,alpha0*k1, beta0*k1)
}
plot(function(x){dbeta_mix(x,0.2,0.1,,0.1)})
plot(function(x){dbeta_mix(x,0.2,0.1,1.5,0.1)})
}
plot(function(x){dbeta_mix(x,0.2,0.1,1.5,0.1)})
plot(function(x){dbeta_mix(x,0.1,0.1,1.5,0.1)})
}
dbeta_mix <- function(x,theta, rho, k1, k2 = 1){
alpha0 <- k2 * theta
beta0 <- k2  - alpha0
w1 <- (k1 + 1) * (k1 * k2 * rho + rho - 1)/(k1^2*k2 - 1)
print(w1)
w1 * dbeta(x,alpha0/k1, beta0/k1) + (1-w1) * dbeta(x,alpha0*k1, beta0*k1)
}
plot(function(x){dbeta_mix(x,0.1,0.1,1.5,0.1)})
dbeta_mix <- function(x,theta, rho, k1, k2 = 100){
alpha0 <- k2 * theta
beta0 <- k2  - alpha0
w1 <- (k1 + 1) * (k1 * k2 * rho + rho - 1)/(k1^2*k2 - 1)
print(w1)
w1 * dbeta(x,alpha0/k1, beta0/k1) + (1-w1) * dbeta(x,alpha0*k1, beta0*k1)
}
plot(function(x){dbeta_mix(x,0.1,0.1,1.5,0.1)})
plot(function(x){dbeta_mix(x,0.1,0.1,1.5)})
plot(function(x){dbeta_mix(x,0.1,0.1,1)})
plot(function(x){dbeta_mix(x,0.1,0.1,10)})
plot(function(x){dbeta_mix(x,0.1,0.1,20)})
plot(function(x){dbeta_mix(x,0.1,0.1,40)})
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1) * (x-0.2)^2},0,1)$value * 0.2 * 0.8
plot(function(x){dbeta_mix(x,0.1,0.1,100)})
integrate(function(x){dbeta_mix(x,0.2,0.1,1,0.1) * (x-0.2)^2},0,1)$value * 0.2 * 0.8
plot(function(x){dbeta_mix(x,0.1,0.1,100)})

scale_x_continuous(labels = scales::percent, limits = c(0, NA),
breaks = c(0,0.002,0.004,0.006,0.008,0.01)) +
scale_y_log10()+
labs(x = 'Prevalence',
y = '',
color = 'ICC') +
theme(strip.placement = 'outside', strip.background = element_blank(),
legend.position = 'bottom', text = element_text(size = 12)) +
guides(x = guide_axis(angle = -90))
odp
ggsave('./Figures/OptimiseDetectionPower.png', odp,
width = 4, height = 4, unit = 'in',dpi = 'retina')
plot_data_clustered_sN <- expand.grid(prevalence = seq(0.005,0.1,by = 0.001),
cost.unit = 1,
cost.pool = c(4,40),
cost.location = c(4,40),
correlation = c(NA,0,0.1,0.3),
N = c(2,4,8)) %>%
rowwise() %>%
mutate(out = optimise_sN_prevalence(prevalence,
cost.unit, cost.pool, cost.location,
correlation, form = 'beta',
max.s = 200, max.N = 20) %>% t %>% as.data.frame) %>%
mutate(s = unlist(out$s),
N = unlist(out$N),
catch = unlist(out$catch))
optimal_cluster_sN <- plot_data_clustered_sN %>%
mutate(simplerandom = is.na(correlation)) %>%
mutate(correlation = ifelse(is.na(correlation),
'NA (simple random survey)',
ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation)))) %>%
mutate(correlation = factor(correlation, levels = c('0.1','0.01',"0 (known)",'NA (simple random survey)'))) %>%
pivot_longer(c(s, N,catch),names_to = 'outcome') %>%
mutate(outcome = paste('Optimal', recode(outcome,
catch = 'sN')),
outcome = fct_relevel(outcome,'Optimal s', 'Optimal N')) %>%
subset(value != Inf) %>%
ggplot(aes(x = prevalence, y = value,
color = correlation,
linetype = simplerandom)) +
geom_line() +
facet_grid(outcome ~ cost.pool + cost.location, scales = 'free',
labeller = label_bquote(rows = .(outcome),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[l] * {phantom() == phantom()} * .(cost.location)),
switch = 'y'
) +
coord_cartesian(xlim = c(0, NA), ylim = c(0,NA)) +
scale_x_continuous(breaks = seq(0,0.1, 0.02), labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = element_blank(),
color = bquote(rho)) +
theme(text = element_text(size = 12),
legend.position = 'bottom',
strip.placement = 'outside',
strip.background = element_rect(fill = 'white')) +
guides(linetype = 'none')
optimal_cluster_sN
plot_data_clustered_sN <- expand.grid(prevalence = seq(0.005,0.1,by = 0.001),
cost.unit = 1,
cost.pool = c(4,40),
cost.location = c(4,40),
correlation = c(NA,0,0.01,0.1,0.3),
N = c(2,4,8)) %>%
rowwise() %>%
mutate(out = optimise_sN_prevalence(prevalence,
cost.unit, cost.pool, cost.location,
correlation, form = 'beta',
max.s = 200, max.N = 20) %>% t %>% as.data.frame) %>%
mutate(s = unlist(out$s),
N = unlist(out$N),
catch = unlist(out$catch))
optimal_cluster_sN <- plot_data_clustered_sN %>%
mutate(simplerandom = is.na(correlation)) %>%
mutate(correlation = ifelse(is.na(correlation),
'NA (simple random survey)',
ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation)))) %>%
mutate(correlation = factor(correlation, levels = c('0.1','0.01',"0 (known)",'NA (simple random survey)'))) %>%
pivot_longer(c(s, N,catch),names_to = 'outcome') %>%
mutate(outcome = paste('Optimal', recode(outcome,
catch = 'sN')),
outcome = fct_relevel(outcome,'Optimal s', 'Optimal N')) %>%
subset(value != Inf & !is.na(correlation)) %>%
ggplot(aes(x = prevalence, y = value,
color = correlation,
linetype = simplerandom)) +
geom_line() +
facet_grid(outcome ~ cost.pool + cost.location, scales = 'free',
labeller = label_bquote(rows = .(outcome),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[l] * {phantom() == phantom()} * .(cost.location)),
switch = 'y'
) +
coord_cartesian(xlim = c(0, NA), ylim = c(0,NA)) +
scale_x_continuous(breaks = seq(0,0.1, 0.02), labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = element_blank(),
color = bquote(rho)) +
theme(text = element_text(size = 12),
legend.position = 'bottom',
strip.placement = 'outside',
strip.background = element_rect(fill = 'white')) +
guides(linetype = 'none')
optimal_cluster_sN
optimal_cluster_sN_simple$data <- optimal_cluster_sN$data  %>%
subset(cost.pool == 4 &
correlation !='NA (simple random survey)'&
correlation != '0.01') %>%
mutate(outcome = recode(outcome,
`Optimal s` = 'Optimal\nPool Size',
`Optimal N` = 'Optimal\nPool Number',
`Optimal sN` = 'Optimal\nCatch'))
optimal_cluster_sN_simple <- optimal_cluster_sN
optimal_cluster_sN_simple$data <- optimal_cluster_sN$data  %>%
subset(cost.pool == 4 &
correlation !='NA (simple random survey)'&
correlation != '0.01') %>%
mutate(outcome = recode(outcome,
`Optimal s` = 'Optimal\nPool Size',
`Optimal N` = 'Optimal\nPool Number',
`Optimal sN` = 'Optimal\nCatch'))
optimal_cluster_sN_simple <- optimal_cluster_sN_simple +
labs(x = 'Prevalence',
color = 'ICC')+
facet_grid(outcome ~ cost.pool + cost.location, scales = 'free',
labeller = label_bquote(rows = .(outcome),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[t] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location)),
switch = 'y'
)
ggsave('./Figures/optimal cluster sN simple.png',
optimal_cluster_sN_simple, width = 6.5, height = 4.5, unit = 'in')
optimal_cluster_sN_simple
optimal_cluster_sN <- plot_data_clustered_sN %>%
mutate(simplerandom = is.na(correlation)) %>%
mutate(correlation = ifelse(is.na(correlation),
'NA (simple random survey)',
ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation)))) %>%
mutate(correlation = factor(correlation, levels = c('0.3','0.1','0.01',"0 (known)",'NA (simple random survey)'))) %>%
pivot_longer(c(s, N,catch),names_to = 'outcome') %>%
mutate(outcome = paste('Optimal', recode(outcome,
catch = 'sN')),
outcome = fct_relevel(outcome,'Optimal s', 'Optimal N')) %>%
subset(value != Inf & !is.na(correlation)) %>%
ggplot(aes(x = prevalence, y = value,
color = correlation,
linetype = simplerandom)) +
geom_line() +
facet_grid(outcome ~ cost.pool + cost.location, scales = 'free',
labeller = label_bquote(rows = .(outcome),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[l] * {phantom() == phantom()} * .(cost.location)),
switch = 'y'
) +
coord_cartesian(xlim = c(0, NA), ylim = c(0,NA)) +
scale_x_continuous(breaks = seq(0,0.1, 0.02), labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = element_blank(),
color = bquote(rho)) +
theme(text = element_text(size = 12),
legend.position = 'bottom',
strip.placement = 'outside',
strip.background = element_rect(fill = 'white')) +
guides(linetype = 'none')
optimal_cluster_sN
optimal_cluster_sN_simple$data <- optimal_cluster_sN$data  %>%
subset(cost.pool == 4 &
correlation !='NA (simple random survey)'&
correlation != '0.01') %>%
mutate(outcome = recode(outcome,
`Optimal s` = 'Optimal\nPool Size',
`Optimal N` = 'Optimal\nPool Number',
`Optimal sN` = 'Optimal\nCatch'))
optimal_cluster_sN_simple <- optimal_cluster_sN_simple +
labs(x = 'Prevalence',
color = 'ICC')+
facet_grid(outcome ~ cost.pool + cost.location, scales = 'free',
labeller = label_bquote(rows = .(outcome),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[t] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location)),
switch = 'y'
)
optimal_cluster_sN_simple
optimal_cluster_sN_simple
ggsave('./Figures/optimal cluster sN simple.png',
optimal_cluster_sN_simple, width = 6.5, height = 4.5, unit = 'in')
optimal_cluster_sN <- plot_data_clustered_sN %>%
mutate(simplerandom = is.na(correlation)) %>%
mutate(correlation = ifelse(is.na(correlation),
'NA (simple random survey)',
ifelse(correlation == 0,
"0 (known)" ,
as.character(correlation)))) %>%
mutate(correlation = factor(correlation, levels = c('0.3','0.1','0.01',"0 (known)",'NA (simple random survey)'))) %>%
pivot_longer(c(s, N,catch),names_to = 'outcome') %>%
mutate(outcome = paste('Optimal', recode(outcome,
catch = 'sN')),
outcome = fct_relevel(outcome,'Optimal s', 'Optimal N')) %>%
subset(value != Inf & !is.na(correlation)) %>%
ggplot(aes(x = prevalence, y = value,
color = correlation,
linetype = simplerandom)) +
geom_line() +
facet_grid(outcome ~ cost.pool + cost.location, scales = 'free',
labeller = label_bquote(rows = .(outcome),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location)),
switch = 'y'
) +
coord_cartesian(xlim = c(0, NA), ylim = c(0,NA)) +
scale_x_continuous(breaks = seq(0,0.1, 0.02), labels = scales::percent_format(1)) +
labs(x = bquote(theta),
y = element_blank(),
color = bquote(rho)) +
theme(text = element_text(size = 12),
legend.position = 'bottom',
strip.placement = 'outside',
strip.background = element_rect(fill = 'white')) +
guides(linetype = 'none')
optimal_cluster_sN
optimal_cluster_sN_simple <- optimal_cluster_sN
optimal_cluster_sN_simple$data <- optimal_cluster_sN$data  %>%
subset(cost.pool == 4 &
correlation !='NA (simple random survey)'&
correlation != '0.01') %>%
mutate(outcome = recode(outcome,
`Optimal s` = 'Optimal\nPool Size',
`Optimal N` = 'Optimal\nPool Number',
`Optimal sN` = 'Optimal\nCatch'))
optimal_cluster_sN_simple <- optimal_cluster_sN_simple +
labs(x = 'Prevalence',
color = 'ICC')+
facet_grid(outcome ~ cost.pool + cost.location, scales = 'free',
labeller = label_bquote(rows = .(outcome),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[t] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location)),
switch = 'y'
)
optimal_cluster_sN_simple
ggsave('./Figures/optimal cluster sN simple.png',
optimal_cluster_sN_simple, width = 6.5, height = 4.5, unit = 'in')
odp <- optimise_detection_data %>%
mutate(opttotalcatch = optcatchpersite*optM) %>%
pivot_longer(c(optcost,optM,optcatchpersite,opttotalcatch), names_to = 'measure', values_to = 'value') %>%
mutate(correlation = factor(correlation),
measure = recode(measure,
optcost = 'Optimal\nCost',
optM = 'Optimal\nNumber of Sites',
optcatchpersite = 'Optimal\nCatch',
opttotalcatch = 'Optimal\nTotal Catch') %>%
fct_relevel('Optimal\nNumber of Sites')) %>%
subset(measure %in% c('Optimal\nNumber of Sites', 'Optimal\nCatch')) %>%
ggplot(aes(x = theta, y = value, color = correlation)) +
facet_grid(measure~cost.pool+cost.location,switch = 'y',scales = 'free',
labeller = label_bquote(rows = .(measure),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location))) +
geom_line() +
#geom_point() +
lims(y = c(0,NA)) +
scale_x_continuous(labels = scales::percent, limits = c(0, NA),
breaks = c(0,0.002,0.004,0.006,0.008,0.01)) +
scale_y_log10()+
labs(x = 'Prevalence',
y = '',
color = 'ICC') +
theme(strip.placement = 'outside', strip.background = element_blank(),
legend.position = 'bottom', text = element_text(size = 12)) +
guides(x = guide_axis(angle = -90))
odp
odp <- optimise_detection_data %>%
mutate(opttotalcatch = optcatchpersite*optM) %>%
pivot_longer(c(optcost,optM,optcatchpersite,opttotalcatch), names_to = 'measure', values_to = 'value') %>%
mutate(correlation = factor(correlation),
measure = recode(measure,
optcost = 'Optimal\nCost',
optM = 'Optimal\nNumber of Sites',
optcatchpersite = 'Optimal\nCatch',
opttotalcatch = 'Optimal\nTotal Catch') %>%
fct_relevel('Optimal\nNumber of Sites')) %>%
subset(measure %in% c('Optimal\nNumber of Sites', 'Optimal\nCatch')) %>%
ggplot(aes(x = theta, y = value, color = correlation)) +
facet_grid(measure~cost.pool+cost.location,switch = 'y',scales = 'free',
labeller = label_bquote(rows = .(measure),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location))) +
geom_line() +
#geom_point() +
lims(y = c(0,NA)) +
scale_x_continuous(labels = scales::percent, limits = c(0, NA),
breaks = c(0,0.002,0.004,0.006,0.008,0.01)) +
scale_y_log10()+
labs(x = 'Prevalence',
y = '',
color = 'ICC') +
theme(strip.placement = 'outside', strip.background = element_blank(),
legend.position = 'bottom', text = element_text(size = 12)) +
guides(x = guide_axis(angle = -90))
odp
ggsave('./Figures/OptimiseDetectionPower.png', odp,
width = 4, height = 4, unit = 'in',dpi = 'retina')
optimise_detection_data <- expand_grid(theta = seq(0.0005, 0.01, by = 0.0001), N = 1,
sensitivity = 1, specificity = 1,
correlation = c(0.1,0.3), form = 'beta',
cost.unit = 1, cost.pool = 4, cost.location = c(4,40)) %>%
rowwise() %>%
mutate(opt = list(optimise_detection_fixed(N = 1, theta = theta,
max.typeI =  0.2, max.typeII = 0.2,
cost.unit = cost.unit, cost.pool = cost.pool, cost.location = cost.location,
sensitivity = sensitivity, specificity = specificity,
correlation = correlation, form = form,
int.step = 30, int.search.only = T)),
optcost = opt$cost,
opts = opt$design['s'], optM = opt$design['M'],
optcatchpersite = opt$design['catch per site'],
opttotalcatch = optcatchpersite*optM)
odp <- optimise_detection_data %>%
mutate(opttotalcatch = optcatchpersite*optM) %>%
pivot_longer(c(optcost,optM,optcatchpersite,opttotalcatch), names_to = 'measure', values_to = 'value') %>%
mutate(correlation = factor(correlation),
measure = recode(measure,
optcost = 'Optimal\nCost',
optM = 'Optimal\nNumber of Sites',
optcatchpersite = 'Optimal\nCatch',
opttotalcatch = 'Optimal\nTotal Catch') %>%
fct_relevel('Optimal\nNumber of Sites')) %>%
subset(measure %in% c('Optimal\nNumber of Sites', 'Optimal\nCatch')) %>%
ggplot(aes(x = theta, y = value, color = correlation)) +
facet_grid(measure~cost.pool+cost.location,switch = 'y',scales = 'free',
labeller = label_bquote(rows = .(measure),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location))) +
geom_line() +
#geom_point() +
lims(y = c(0,NA)) +
scale_x_continuous(labels = scales::percent, limits = c(0, NA),
breaks = c(0,0.002,0.004,0.006,0.008,0.01)) +
scale_y_log10()+
labs(x = 'Prevalence',
y = '',
color = 'ICC') +
theme(strip.placement = 'outside', strip.background = element_blank(),
legend.position = 'bottom', text = element_text(size = 12)) +
guides(x = guide_axis(angle = -90))
odp
odp <- optimise_detection_data %>%
mutate(opttotalcatch = optcatchpersite*optM) %>%
pivot_longer(c(optcost,optM,optcatchpersite,opttotalcatch), names_to = 'measure', values_to = 'value') %>%
mutate(correlation = factor(correlation),
measure = recode(measure,
optcost = 'Optimal\nCost',
optM = 'Optimal\nNumber of Sites',
optcatchpersite = 'Optimal\nCatch',
opttotalcatch = 'Optimal\nTotal Catch') %>%
fct_relevel('Optimal\nNumber of Sites')) %>%
subset(measure %in% c('Optimal\nNumber of Sites', 'Optimal\nCatch') &
theta >= 0.001) %>%
ggplot(aes(x = theta, y = value, color = correlation)) +
facet_grid(measure~cost.pool+cost.location,switch = 'y',scales = 'free',
labeller = label_bquote(rows = .(measure),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location))) +
geom_line() +
#geom_point() +
lims(y = c(0,NA)) +
scale_x_continuous(labels = scales::percent, limits = c(0, NA),
breaks = c(0,0.002,0.004,0.006,0.008,0.01)) +
scale_y_log10()+
labs(x = 'Prevalence',
y = '',
color = 'ICC') +
theme(strip.placement = 'outside', strip.background = element_blank(),
legend.position = 'bottom', text = element_text(size = 12)) +
guides(x = guide_axis(angle = -90))
odp
odp <- optimise_detection_data %>%
mutate(opttotalcatch = optcatchpersite*optM) %>%
pivot_longer(c(optcost,optM,optcatchpersite,opttotalcatch), names_to = 'measure', values_to = 'value') %>%
mutate(correlation = factor(correlation),
measure = recode(measure,
optcost = 'Optimal\nCost',
optM = 'Optimal\nNumber of Sites',
optcatchpersite = 'Optimal\nCatch',
opttotalcatch = 'Optimal\nTotal Catch') %>%
fct_relevel('Optimal\nNumber of Sites')) %>%
subset(measure %in% c('Optimal\nNumber of Sites', 'Optimal\nCatch') &
theta >= 0.001) %>%
ggplot(aes(x = theta, y = value, color = correlation)) +
facet_grid(measure~cost.pool+cost.location,switch = 'y',scales = 'free',
labeller = label_bquote(rows = .(measure),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location))) +
geom_smooth() +
#geom_point() +
lims(y = c(0,NA)) +
scale_x_continuous(labels = scales::percent, limits = c(0, NA),
breaks = c(0,0.002,0.004,0.006,0.008,0.01)) +
scale_y_log10()+
labs(x = 'Prevalence',
y = '',
color = 'ICC') +
theme(strip.placement = 'outside', strip.background = element_blank(),
legend.position = 'bottom', text = element_text(size = 12)) +
guides(x = guide_axis(angle = -90))
odp
odp <- optimise_detection_data %>%
mutate(opttotalcatch = optcatchpersite*optM) %>%
pivot_longer(c(optcost,optM,optcatchpersite,opttotalcatch), names_to = 'measure', values_to = 'value') %>%
mutate(correlation = factor(correlation),
measure = recode(measure,
optcost = 'Optimal\nCost',
optM = 'Optimal\nNumber of Sites',
optcatchpersite = 'Optimal\nCatch',
opttotalcatch = 'Optimal\nTotal Catch') %>%
fct_relevel('Optimal\nNumber of Sites')) %>%
subset(measure %in% c('Optimal\nNumber of Sites', 'Optimal\nCatch') &
theta >= 0.001) %>%
ggplot(aes(x = theta, y = value, color = correlation)) +
facet_grid(measure~cost.pool+cost.location,switch = 'y',scales = 'free',
labeller = label_bquote(rows = .(measure),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location))) +
geom_smooth(se = FALSE) +
#geom_point() +
lims(y = c(0,NA)) +
scale_x_continuous(labels = scales::percent, limits = c(0, NA),
breaks = c(0,0.002,0.004,0.006,0.008,0.01)) +
scale_y_log10()+
labs(x = 'Prevalence',
y = '',
color = 'ICC') +
theme(strip.placement = 'outside', strip.background = element_blank(),
legend.position = 'bottom', text = element_text(size = 12)) +
guides(x = guide_axis(angle = -90))
odp
ggsave('./Figures/OptimiseDetectionPower.png', odp,
width = 4, height = 4, unit = 'in',dpi = 'retina')
odp <- optimise_detection_data %>%
mutate(opttotalcatch = optcatchpersite*optM) %>%
pivot_longer(c(optcost,optM,optcatchpersite,opttotalcatch), names_to = 'measure', values_to = 'value') %>%
mutate(correlation = factor(correlation),
measure = recode(measure,
optcost = 'Optimal\ncost',
optM = 'Optimal\nnumber of sites',
optcatchpersite = 'Optimal\ncatch per site',
opttotalcatch = 'Optimal\ntotal catch') %>%
fct_relevel('Optimal\nnumber of sites')) %>%
subset(measure %in% c('Optimal\nnumber of sites', 'Optimal\ncatch per site') &
theta >= 0.001) %>%
ggplot(aes(x = theta, y = value, color = correlation)) +
facet_grid(measure~cost.pool+cost.location,switch = 'y',scales = 'free',
labeller = label_bquote(rows = .(measure),
cols = c[u] * {phantom() == phantom()} * 1 * ';' *
c[p] * {phantom() == phantom()} * .(cost.pool) * ';' *
c[s] * {phantom() == phantom()} * .(cost.location))) +
geom_smooth(se = FALSE) +
#geom_point() +
lims(y = c(0,NA)) +
scale_x_continuous(labels = scales::percent, limits = c(0, NA),
breaks = c(0,0.002,0.004,0.006,0.008,0.01)) +
scale_y_log10()+
labs(x = 'Prevalence',
y = '',
color = 'ICC') +
theme(strip.placement = 'outside', strip.background = element_blank(),
legend.position = 'bottom', text = element_text(size = 12)) +
guides(x = guide_axis(angle = -90))
odp
ggsave('./Figures/OptimiseDetectionPower.png', odp,
width = 4, height = 4, unit = 'in',dpi = 'retina')
dp <- detection_data %>%
mutate(ICC  = factor(correlation),
M = factor(M),
Prevalence = paste(theta * 100, '%')) %>%
ggplot(aes(x = catch,y = `detection probability`, color  = M)) +
geom_line() +
facet_grid(Prevalence~ICC, labeller = label_both) +
labs(x = 'Total catch at all sites',
y = 'Power\n(detection probability)',
color = 'Number of sampling sites') +
lims(x = c(0, NA)) +
theme(strip.placement = 'outside', legend.position = 'bottom',
text = element_text(size = 12)) +
scale_y_continuous(labels = scales::percent, limits = c(0,NA))
dp
ggsave('./Figures/DetectionPower.png', dp,
width = 4, height = 4, unit = 'in',dpi = 'retina')
0.4 * 0.8
prod(detection_power) + prod(1-detection_power)
detection_power <- c(0.8,0.4)
prod(detection_power) + prod(1-detection_power)
ggplot2::scale_y_continuous()
help(scale_y_continuous)
